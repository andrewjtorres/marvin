name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  root_static_analysis:
    name: Root Static Analysis
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Setup Node
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.17
      - name: Install Yarn
        run: npm install --global yarn@1.22
      - name: Set Yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore Yarn cache
        uses: actions/cache@v3.0.11
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-cache-
      - name: Install Node dependencies
        run: yarn install --frozen-lockfile
      - name: Lint files
        run: yarn --silent lint:files
  ai_static_analysis:
    name: AI Static Analysis
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Setup Node
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.17
      - name: Set Yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore Yarn cache
        uses: actions/cache@v3.0.11
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-cache-
      - name: Install Node dependencies
        run: yarn install --frozen-lockfile
      - name: Setup Python
        uses: actions/setup-python@v4.3.0
        with:
          python-version: '3.10'
      - name: Install Poetry
        run: pip install --upgrade pip poetry>=1.2
      - name: Set Poetry cache directory
        id: poetry-cache
        run: echo "::set-output name=dir::$(poetry config cache-dir)"
      - name: Restore Poetry cache
        uses: actions/cache@v3.0.11
        with:
          path: ${{ steps.poetry-cache.outputs.dir }}
          key: ai-poetry-cache-${{ hashFiles('packages/ai/poetry.lock') }}
          restore-keys: ai-poetry-cache-
      - name: Install Python dependencies
        run: poetry install
        working-directory: packages/ai
      - name: Lint files, scripts, and types
        run: yarn --silent lint
        working-directory: packages/ai
  ai_test:
    name: AI Test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Setup Node
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.17
      - name: Set Yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore Yarn cache
        uses: actions/cache@v3.0.11
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-cache-
      - name: Install Node dependencies
        run: yarn install --frozen-lockfile
      - name: Setup Python
        uses: actions/setup-python@v4.3.0
        with:
          python-version: '3.10'
      - name: Install Poetry
        run: pip install --upgrade pip poetry>=1.2
      - name: Set Poetry cache directory
        id: poetry-cache
        run: echo "::set-output name=dir::$(poetry config cache-dir)"
      - name: Restore Poetry cache
        uses: actions/cache@v3.0.11
        with:
          path: ${{ steps.poetry-cache.outputs.dir }}
          key: ai-poetry-cache-${{ hashFiles('packages/ai/poetry.lock') }}
          restore-keys: ai-poetry-cache-
      - name: Install Python dependencies
        run: poetry install
        working-directory: packages/ai
      - name: Test units
        run: yarn --silent test:units --cov ai --cov-branch --cov-report xml --doctest-modules
        working-directory: packages/ai
      - name: Publish code coverage report
        uses: codecov/codecov-action@v3.1.4
        with:
          flags: ai
